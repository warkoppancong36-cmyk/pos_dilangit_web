import{aA as i}from"./main-r9eOPLYU.js";const o="/api/products";class u{static async getAll(r){var t;try{return(await i.get(o,{params:r})).data}catch(e){throw((t=e.response)==null?void 0:t.data)||this.handleError(e)}}static async getById(r){var t;try{return(await i.get(`${o}/${r}`)).data}catch(e){throw((t=e.response)==null?void 0:t.data)||this.handleError(e)}}static async create(r,t){var e;try{const a=new FormData;return Object.entries(r).forEach(([c,s])=>{s!=null&&s!==""&&(c==="dimensions"||c==="tags"?a.append(c,JSON.stringify(s)):a.append(c,String(s)))}),t&&a.append("image",t),(await i.post(o,a,{headers:{"Content-Type":"multipart/form-data"}})).data}catch(a){throw((e=a.response)==null?void 0:e.data)||this.handleError(a)}}static async update(r,t,e){var a;try{const n=new FormData;return n.append("_method","PUT"),Object.entries(t).forEach(([s,d])=>{d!=null&&d!==""&&(s==="dimensions"||s==="tags"?n.append(s,JSON.stringify(d)):n.append(s,String(d)))}),e&&n.append("image",e),(await i.post(`${o}/${r}`,n,{headers:{"Content-Type":"multipart/form-data"}})).data}catch(n){throw((a=n.response)==null?void 0:a.data)||this.handleError(n)}}static async delete(r){var t;try{return(await i.delete(`${o}/${r}`)).data}catch(e){throw((t=e.response)==null?void 0:t.data)||this.handleError(e)}}static async toggleActive(r){var t;try{return(await i.post(`${o}/${r}/toggle-active`)).data}catch(e){throw((t=e.response)==null?void 0:t.data)||this.handleError(e)}}static async toggleFeatured(r){var t;try{return(await i.post(`${o}/${r}/toggle-featured`)).data}catch(e){throw((t=e.response)==null?void 0:t.data)||this.handleError(e)}}static async bulkDelete(r){var t;try{return(await i.post(`${o}/bulk-delete`,{ids:r})).data}catch(e){throw((t=e.response)==null?void 0:t.data)||this.handleError(e)}}static async getStats(){var r;try{return(await i.get(`${o}/stats`)).data}catch(t){throw((r=t.response)==null?void 0:r.data)||this.handleError(t)}}static validateImage(r){return["image/jpeg","image/png","image/jpg","image/gif"].includes(r.type)?r.size>2097152?{valid:!1,error:"Ukuran file terlalu besar. Maksimal 2MB."}:{valid:!0}:{valid:!1,error:"Format file tidak didukung. Gunakan JPEG, PNG, JPG, atau GIF."}}static formatPrice(r){return new Intl.NumberFormat("id-ID",{style:"currency",currency:"IDR",minimumFractionDigits:0,maximumFractionDigits:0}).format(r)}static calculateProfitMargin(r,t){if(t<=0)return 0;const e=(r-t)/t*100;return Math.ceil(e)}static generateSKU(r){const t=r.replace(/[^A-Za-z]/g,"").substring(0,3).toUpperCase(),e=new Date().toISOString().slice(2,10).replace(/-/g,""),a=Math.random().toString(36).substring(2,5).toUpperCase();return`${t}${e}${a}`}static validateSKU(r){return r.length<3?{valid:!1,error:"SKU minimal 3 karakter"}:r.length>20?{valid:!1,error:"SKU maksimal 20 karakter"}:/^[A-Za-z0-9-_]+$/.test(r)?{valid:!0}:{valid:!1,error:"SKU hanya boleh mengandung huruf, angka, dash (-), dan underscore (_)"}}static handleError(r){if(r.response){const{status:t,data:e}=r.response;return t===422?{success:!1,message:e.message||"Validation failed",errors:e.errors||{}}:t===404?{success:!1,message:"Produk tidak ditemukan"}:t===500?{success:!1,message:"Terjadi kesalahan server"}:{success:!1,message:e.message||"Terjadi kesalahan"}}else return r.request?{success:!1,message:"Tidak dapat terhubung ke server"}:{success:!1,message:r.message||"Terjadi kesalahan tidak dikenal"}}}export{u as P};
